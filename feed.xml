<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://lcy960729.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lcy960729.github.io/" rel="alternate" type="text/html" hreflang="en" /><updated>2021-01-22T00:43:46+09:00</updated><id>https://lcy960729.github.io/feed.xml</id><title type="html">CY의 개발 블로그</title><subtitle></subtitle><author><name>Lee Chan Young</name><email>lcy960729@gmail.com</email></author><entry><title type="html">의존하는 객체에 대한 테스트 코드 고찰</title><link href="https://lcy960729.github.io/wordbook-project/2021/01/18/%EC%9D%98%EC%A1%B4%ED%95%98%EB%8A%94-%EA%B0%9D%EC%B2%B4%EC%97%90-%EB%8C%80%ED%95%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EA%B3%A0%EC%B0%B0.html" rel="alternate" type="text/html" title="의존하는 객체에 대한 테스트 코드 고찰" /><published>2021-01-18T00:00:00+09:00</published><updated>2021-01-18T00:00:00+09:00</updated><id>https://lcy960729.github.io/wordbook-project/2021/01/18/%EC%9D%98%EC%A1%B4%ED%95%98%EB%8A%94-%EA%B0%9D%EC%B2%B4%EC%97%90-%EB%8C%80%ED%95%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EA%B3%A0%EC%B0%B0</id><content type="html" xml:base="https://lcy960729.github.io/wordbook-project/2021/01/18/%EC%9D%98%EC%A1%B4%ED%95%98%EB%8A%94-%EA%B0%9D%EC%B2%B4%EC%97%90-%EB%8C%80%ED%95%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EA%B3%A0%EC%B0%B0.html">&lt;h1 id=&quot;2021-01-18--의존하는-객체에-대한-테스트-코드-고찰&quot;&gt;2021-01-18 :: 의존하는 객체에 대한 테스트 코드 고찰&lt;/h1&gt;

&lt;p&gt;구현 코드들을 대량 수정하면서 테스트 코드들이 여러 깨지게 됐다. 해당 테스트 코드들을 고치면서 느낀점이 서비스 레이어 단에서 mapper 클래스가 계속 사용되게 되는데 이 모든걸을 mock 객체로 두면 매번 given으로 정의를 해줘야한다. 동작을 정의 해주면서 mapper가 들어가기 이전 값과 결과 값을 계속해서 생성하게 되는 코드가 반복되는데 해당 코드들을 줄이기로 했다.&lt;/p&gt;

&lt;p&gt;일단 모든 테스트 코드는 도메인 단위로 작성하도록 하고 있다. 이제 도메인 단위에서 Mapper의 테스트 코드를 작성하고 Mapper 테스트 코드가 정상적으로 동작하게 되면 서비스 레이어에서 테스트 코드를 작성할 때 사용되는 Mapper 객체를 목 객체가 아닌 구현 객체로 테스트 한다. 이렇게 변경하게되면서 테스트 코드에 중복되는 많은 코드들을  줄일 수 있게 되었다.&lt;/p&gt;

&lt;p&gt;간단하게 예를 들면 아래가 mapper 클래스를 mock 객체로 둔 이전의 테스트 코드이다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getDetailDTOById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//given&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;testName&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;testPw&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0L&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;nc&quot;&gt;UserDetailDTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userDetailDTOTemp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserDetailDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;testName&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;given&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;willReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Optional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;given&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userToUserDetailDtoMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;entityToUserDetailDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;willReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userDetailDTOTemp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//when&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;UserDetailDTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userDetailDTO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getUserService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDetailDTOById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//then&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userDetailDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isNotNull&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;아래 코드가 mapper 테스트 코드를 먼저 작성하고 정상적으로 동작된다는 가정하에 mapper 클래스를 mock이 아닌 구현 객체를 사용한것이다. 많은 양의 코드가 줄어들게 되었으며  다른 테스트 코드에서 중복되는 코드들을 줄일 수 있었다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@DisplayName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;아이디로 UserDetailDTO를 반환하는 테스트&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getDetailDTOById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//given&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;GetUserService&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getUserService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GetUserService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userToUserDetailDtoMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;given&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;anyLong&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;willReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Optional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;DomainFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//when&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;UserDetailDTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userDetailDTO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getUserService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDetailDTOById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//then&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userDetailDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isNotNull&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;프로젝트를 진행을 하면서 많은 코드들을 수정하게 되고 프로그램의 사이즈가 커질 수록(그렇게 큰건 아니지만) 의존하는 객체들이 여럿 생겨나게 된다. 테스트 코드 작성시 의존하는 객체들은 모두 mocking을 하기에 테스트 코드를 작성할때마다 중복되는 코드가 많이 생기게 되고 테스트 코드를 작성하는 시간 때문에 개발 속도에도 큰 영향을 주게 되었다.&lt;/p&gt;

&lt;p&gt;해결책으로 선택한 나의 방법은 어느정도의 의존 객체를 모두 mocking 하지 않고 구현 객체로 사용하는것이다. 이 방법을 선택하고 난 후 테스트 코드의 중복 코드가 줄어들고 개발 속도가 높아지는 이점을 주었다.&lt;/p&gt;

&lt;p&gt;(만약 이 부분(서비스 레이어)에서 에러가 발생하더라도 실제로 의존하는 객체는 mapper객체들 뿐이고 나머지는 모두 mock 객체이기 때문에 mapper와 서비스 코드에서 에러를 확인하면 된다. 테스트 코드에 의존하는 부분들을 잘 정리해 두면 나중에 다른 팀원이 참가하게 됐을때나 코드를 변경하면서 발생하는 에러를 찾을때 실제 구현 객체에 의존하는 객체들만 확인 해보면 된다. )&lt;/p&gt;</content><author><name>CY</name><email>lcy960729@gmail.com</email></author><category term="wordbook-project" /><category term="WordBookProject" /><category term="TestCode" /><summary type="html">2021-01-18 :: 의존하는 객체에 대한 테스트 코드 고찰 구현 코드들을 대량 수정하면서 테스트 코드들이 여러 깨지게 됐다. 해당 테스트 코드들을 고치면서 느낀점이 서비스 레이어 단에서 mapper 클래스가 계속 사용되게 되는데 이 모든걸을 mock 객체로 두면 매번 given으로 정의를 해줘야한다. 동작을 정의 해주면서 mapper가 들어가기 이전 값과 결과 값을 계속해서 생성하게 되는 코드가 반복되는데 해당 코드들을 줄이기로 했다. 일단 모든 테스트 코드는 도메인 단위로 작성하도록 하고 있다. 이제 도메인 단위에서 Mapper의 테스트 코드를 작성하고 Mapper 테스트 코드가 정상적으로 동작하게 되면 서비스 레이어에서 테스트 코드를 작성할 때 사용되는 Mapper 객체를 목 객체가 아닌 구현 객체로 테스트 한다. 이렇게 변경하게되면서 테스트 코드에 중복되는 많은 코드들을 줄일 수 있게 되었다. 간단하게 예를 들면 아래가 mapper 클래스를 mock 객체로 둔 이전의 테스트 코드이다. @Test void getDetailDTOById() throws Exception { //given Long id = 0L; User user = User.builder() .id(id) .name(&quot;testName&quot;) .pw(&quot;testPw&quot;) .email(&quot;0L&quot;) .build(); UserDetailDTO userDetailDTOTemp = UserDetailDTO.builder() .id(id) .name(&quot;testName&quot;) .build(); given(userRepository.findById(id)).willReturn(Optional.of(user)); given(userToUserDetailDtoMapper.entityToUserDetailDTO(any(User.class))).willReturn(userDetailDTOTemp); //when UserDetailDTO userDetailDTO = getUserService.getDetailDTOById(id); //then assertThat(userDetailDTO).isNotNull(); } 아래 코드가 mapper 테스트 코드를 먼저 작성하고 정상적으로 동작된다는 가정하에 mapper 클래스를 mock이 아닌 구현 객체를 사용한것이다. 많은 양의 코드가 줄어들게 되었으며 다른 테스트 코드에서 중복되는 코드들을 줄일 수 있었다. @Test @DisplayName(&quot;아이디로 UserDetailDTO를 반환하는 테스트&quot;) void getDetailDTOById() { //given GetUserService getUserService = new GetUserService(userRepository, userToUserDetailDtoMapper); long userId = 0L; given(userRepository.findById(anyLong())).willReturn(Optional.of(DomainFactory.createUser(userId))); //when UserDetailDTO userDetailDTO = getUserService.getDetailDTOById(userId); //then assertThat(userDetailDTO).isNotNull(); } 프로젝트를 진행을 하면서 많은 코드들을 수정하게 되고 프로그램의 사이즈가 커질 수록(그렇게 큰건 아니지만) 의존하는 객체들이 여럿 생겨나게 된다. 테스트 코드 작성시 의존하는 객체들은 모두 mocking을 하기에 테스트 코드를 작성할때마다 중복되는 코드가 많이 생기게 되고 테스트 코드를 작성하는 시간 때문에 개발 속도에도 큰 영향을 주게 되었다. 해결책으로 선택한 나의 방법은 어느정도의 의존 객체를 모두 mocking 하지 않고 구현 객체로 사용하는것이다. 이 방법을 선택하고 난 후 테스트 코드의 중복 코드가 줄어들고 개발 속도가 높아지는 이점을 주었다. (만약 이 부분(서비스 레이어)에서 에러가 발생하더라도 실제로 의존하는 객체는 mapper객체들 뿐이고 나머지는 모두 mock 객체이기 때문에 mapper와 서비스 코드에서 에러를 확인하면 된다. 테스트 코드에 의존하는 부분들을 잘 정리해 두면 나중에 다른 팀원이 참가하게 됐을때나 코드를 변경하면서 발생하는 에러를 찾을때 실제 구현 객체에 의존하는 객체들만 확인 해보면 된다. )</summary></entry><entry><title type="html">도메인 기능들 구현 완료</title><link href="https://lcy960729.github.io/wordbook-project/2021/01/17/%EB%8F%84%EB%A9%94%EC%9D%B8-%EA%B8%B0%EB%8A%A5%EB%93%A4-%EA%B5%AC%ED%98%84-%EC%99%84%EB%A3%8C.html" rel="alternate" type="text/html" title="도메인 기능들 구현 완료" /><published>2021-01-17T00:00:00+09:00</published><updated>2021-01-17T00:00:00+09:00</updated><id>https://lcy960729.github.io/wordbook-project/2021/01/17/%EB%8F%84%EB%A9%94%EC%9D%B8-%EA%B8%B0%EB%8A%A5%EB%93%A4-%EA%B5%AC%ED%98%84-%EC%99%84%EB%A3%8C</id><content type="html" xml:base="https://lcy960729.github.io/wordbook-project/2021/01/17/%EB%8F%84%EB%A9%94%EC%9D%B8-%EA%B8%B0%EB%8A%A5%EB%93%A4-%EA%B5%AC%ED%98%84-%EC%99%84%EB%A3%8C.html">&lt;h1 id=&quot;2021-01-17--도메인-기능들-구현-완료&quot;&gt;2021-01-17 :: 도메인 기능들 구현 완료&lt;/h1&gt;

&lt;p&gt;모든 도메인에 대해서 Create, Update, Get 메소드가 동일 함으로 Create 메소드의 반환값으로만 설명을 하겠다.&lt;br /&gt;
&lt;a href=&quot;/assets/innerPosts/2021-01-17-도메인-기능들-구현-완료/1-User-도메인.md&quot;&gt;1. User 도메인&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/innerPosts/2021-01-17-도메인-기능들-구현-완료/2-UserWordBook-도메인.md&quot;&gt;2. UserWordBook 도메인&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/innerPosts/2021-01-17-도메인-기능들-구현-완료/3-Word-Of-UserWordBook-도메인.md&quot;&gt;3. Word Of UserWordBook 도메인&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;그룹과 관련하여 그룹 관리자와 그룹 사용자로 나뉘게 된다. 그룹 관리자와 그룹 사용자의 기능은 나누어서 구현하였으며 그룹 참여 기능을 구현하게 되면 이후에 다른 권한에 대한 결과값 구현 내용을 추가 하겠다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/innerPosts/2021-01-17-도메인-기능들-구현-완료/4-StudyGroup-도메인.md&quot;&gt;4. StudyGroup 도메인&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/innerPosts/2021-01-17-도메인-기능들-구현-완료/5-StudyGroupWordBook-도메인.md&quot;&gt;5. StudyGroupWordBook 도메인&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/innerPosts/2021-01-17-도메인-기능들-구현-완료/6-Word-Of-StudyGroupWordBook-도메인.md&quot;&gt;6. Word Of StudyGroupWordBook 도메인&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;현재까지 개발된 내용으로 대략적인 단어장의 기능은 모두 동작하게 됐다. 하지만 부족한 점과 생각해야할것들을 정리 해보겠다.&lt;/p&gt;

&lt;p&gt;첫번째는 먼저 개발만 달려오다보니 API 명세에 대한 내용을 잊고 있었다. 현재 API 반환값은 self -description 이 없기 때문에 완벽한 Rest Api라고 부를수 없다.&lt;/p&gt;

&lt;p&gt;두번째는 테스트 코드 수정 문제 이다. 테스트 코드를 먼저 작성하게 되면서 오류가 발생하는 부분이 줄어드는것은 좋은 점이라 생각하지만 서비스의 구조가 바뀌거나 했을때 수정해야하는 부분이 생각보다 많았다. 다음 부턴 테스트 코드를 작성할때도 조금 더 큰 그림을 보고 당장에 돌아가는 코드보단 잘 설계된 코드로 방향을 맞추어 최대한 수정하는 일이 적어지도록 노력 해봐야겠다.&lt;/p&gt;

&lt;p&gt;부족한 점 두가지 모두 그룹 참여 기능을 구현한 후 조금씩 수정해 나가도록 해보겠다.&lt;/p&gt;</content><author><name>CY</name><email>lcy960729@gmail.com</email></author><category term="wordbook-project" /><category term="WordBookProject" /><summary type="html">2021-01-17 :: 도메인 기능들 구현 완료 모든 도메인에 대해서 Create, Update, Get 메소드가 동일 함으로 Create 메소드의 반환값으로만 설명을 하겠다. 1. User 도메인 2. UserWordBook 도메인 3. Word Of UserWordBook 도메인 그룹과 관련하여 그룹 관리자와 그룹 사용자로 나뉘게 된다. 그룹 관리자와 그룹 사용자의 기능은 나누어서 구현하였으며 그룹 참여 기능을 구현하게 되면 이후에 다른 권한에 대한 결과값 구현 내용을 추가 하겠다. 4. StudyGroup 도메인 5. StudyGroupWordBook 도메인 6. Word Of StudyGroupWordBook 도메인 현재까지 개발된 내용으로 대략적인 단어장의 기능은 모두 동작하게 됐다. 하지만 부족한 점과 생각해야할것들을 정리 해보겠다. 첫번째는 먼저 개발만 달려오다보니 API 명세에 대한 내용을 잊고 있었다. 현재 API 반환값은 self -description 이 없기 때문에 완벽한 Rest Api라고 부를수 없다. 두번째는 테스트 코드 수정 문제 이다. 테스트 코드를 먼저 작성하게 되면서 오류가 발생하는 부분이 줄어드는것은 좋은 점이라 생각하지만 서비스의 구조가 바뀌거나 했을때 수정해야하는 부분이 생각보다 많았다. 다음 부턴 테스트 코드를 작성할때도 조금 더 큰 그림을 보고 당장에 돌아가는 코드보단 잘 설계된 코드로 방향을 맞추어 최대한 수정하는 일이 적어지도록 노력 해봐야겠다. 부족한 점 두가지 모두 그룹 참여 기능을 구현한 후 조금씩 수정해 나가도록 해보겠다.</summary></entry><entry><title type="html">Collection Object Null 처리</title><link href="https://lcy960729.github.io/wordbook-project/2021/01/15/Collection-Object-Null-%EC%B2%98%EB%A6%AC.html" rel="alternate" type="text/html" title="Collection Object Null 처리" /><published>2021-01-15T00:00:00+09:00</published><updated>2021-01-15T00:00:00+09:00</updated><id>https://lcy960729.github.io/wordbook-project/2021/01/15/Collection-Object-Null-%EC%B2%98%EB%A6%AC</id><content type="html" xml:base="https://lcy960729.github.io/wordbook-project/2021/01/15/Collection-Object-Null-%EC%B2%98%EB%A6%AC.html">&lt;h1 id=&quot;2021-01-15--collection-object-null-처리&quot;&gt;2021-01-15 :: Collection Object Null 처리&lt;/h1&gt;

&lt;p&gt;Collection은 맵핑할때나 객체를 받아올때나 null 때문에 문제가 많았다. (내가 잘 처리한 방법을 모르는건가??)&lt;/p&gt;

&lt;p&gt;그래서 일단은 내 프로젝트에서 약속으로 Entity에서 사용되는 Collection객체는 final로 정의하고&lt;/p&gt;

&lt;p&gt;DTO에서는 final로 정의하지않고 맵핑할때 새로 만든 Collection 객체로 set하도록 하였다.&lt;/p&gt;

&lt;p&gt;null로 인해 Business로직에서 에러가 나지 않도록 좋은 방법을 생각해봐야겠다.&lt;/p&gt;</content><author><name>CY</name><email>lcy960729@gmail.com</email></author><category term="wordbook-project" /><category term="WordBookProject" /><summary type="html">2021-01-15 :: Collection Object Null 처리 Collection은 맵핑할때나 객체를 받아올때나 null 때문에 문제가 많았다. (내가 잘 처리한 방법을 모르는건가??) 그래서 일단은 내 프로젝트에서 약속으로 Entity에서 사용되는 Collection객체는 final로 정의하고 DTO에서는 final로 정의하지않고 맵핑할때 새로 만든 Collection 객체로 set하도록 하였다. null로 인해 Business로직에서 에러가 나지 않도록 좋은 방법을 생각해봐야겠다.</summary></entry><entry><title type="html">Mapper Test Code 및 생각</title><link href="https://lcy960729.github.io/wordbook-project/2021/01/13/Mapper-Test-Code-%EB%B0%8F-%EC%83%9D%EA%B0%81.html" rel="alternate" type="text/html" title="Mapper Test Code 및 생각" /><published>2021-01-13T00:00:00+09:00</published><updated>2021-01-13T00:00:00+09:00</updated><id>https://lcy960729.github.io/wordbook-project/2021/01/13/Mapper-Test-Code-%EB%B0%8F-%EC%83%9D%EA%B0%81</id><content type="html" xml:base="https://lcy960729.github.io/wordbook-project/2021/01/13/Mapper-Test-Code-%EB%B0%8F-%EC%83%9D%EA%B0%81.html">&lt;h1 id=&quot;2021-01-13--mapper-test-code-및-생각&quot;&gt;2021-01-13 :: Mapper Test Code 및 생각&lt;/h1&gt;

&lt;p&gt;하루 전에 생각했던 Mapper Test code를 작성해보았다. 커스텀한 맵핑 규칙에 대해 테스트를  동작 하였고 전체적인 맵핑 메소드를 테스트 하였다. 아래는 작성해본 코드이다.&lt;/p&gt;

&lt;p&gt;테스트 코드 작성하면서 입력이 Null로 들어왔을때에 대한 생각인데 Null일때 에러를 내는것이 좋은지 유연하게 Blank 값을 넣어주는게 좋은지 생각해봐야겠다.&lt;/p&gt;

&lt;p&gt;또한 Jpa Entity 내 맵핑하는 변수가 Collection 객체일 경우를 생각해서 모두 final 변수로 두어 null값이 들어가지 않게 초기화하였다. 이 방법이 문제가 될만한 점이 있는지 생각해봐야겠다…&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@SpringBootTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;DomainFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserMapperImpl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserMapperTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;UserMapperTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DomainFactory&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;domainFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ObjectMapper&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;objectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserMapper&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@DisplayName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;createUserDTOToEntity 맵핑이 정삭적으로 동작 하는 테스트&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createUserDTOToEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JsonProcessingException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//given&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;CreateUserRequestDTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;createUserRequestDTO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CreateUserRequestDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;testName&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;testEmail&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;testPw&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//when&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createUserDTOToEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;createUserRequestDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//then&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;createUserRequestDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getEmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;createUserRequestDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getEmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@DisplayName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;userToUserDetailDTO 맵핑이 정삭적으로 동작 하는 테스트&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;entityToUserDetailDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JsonProcessingException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//given&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;domainFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;IntStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;StudyGroup&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;studyGroup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;domainFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createStudyGroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;UserWordBook&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userWordBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;domainFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createUserWordBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;nc&quot;&gt;Study&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;study&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Study&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;studyGroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;studyGroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;joinToStudy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;study&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getUserWordBookList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userWordBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//when&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;UserDetailResponseDTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userDetailResponseDTO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;entityToUserDetailDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//then&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userDetailResponseDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userDetailResponseDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userDetailResponseDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getEmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getEmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userDetailResponseDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

        &lt;span class=&quot;nc&quot;&gt;IntStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;UserDetailResponseDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;StudyGroupDTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;studyGroupDTO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userDetailResponseDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getStudyGroupList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;StudyGroup&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;studyGroup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getStudyList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getStudyGroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;studyGroupDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;studyGroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;studyGroupDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;studyGroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

            &lt;span class=&quot;nc&quot;&gt;UserDetailResponseDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;WordBookDTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wordBookDTO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userDetailResponseDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWordBookDTOList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;UserWordBook&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userWordBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getUserWordBookList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wordBookDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userWordBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wordBookDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userWordBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@DisplayName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;User를 StudyGroupDTOList 맵핑이 정삭적으로 동작 하는 테스트&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mapToStudyGroupDTOList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//given&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;domainFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;IntStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;{&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;StudyGroup&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;studyGroup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;domainFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createStudyGroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;nc&quot;&gt;Study&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;study&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Study&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;studyGroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;studyGroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getStudyList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;study&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//when&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;UserDetailResponseDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;StudyGroupDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;studyGroupDTOList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mapToStudyGroupDTOList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//then&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;IntStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;{&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;UserDetailResponseDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;StudyGroupDTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;studyGroupDTO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;studyGroupDTOList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;StudyGroup&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;studyGroup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getStudyList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getStudyGroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;studyGroupDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;studyGroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;studyGroupDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;studyGroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@DisplayName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;userWordBookList를 userWordBookDTOList로 맵핑이 정삭적으로 동작 하는 테스트&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mapToWordBookDTOList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//given&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;UserWordBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userWordBookList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;

        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;IntStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;userWordBookList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;domainFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createUserWordBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//when&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;UserDetailResponseDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;WordBookDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wordBookDTOList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mapToWordBookDTOList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userWordBookList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//then&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;IntStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;{&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;UserDetailResponseDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;WordBookDTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wordBookDTO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wordBookDTOList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;UserWordBook&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userWordBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userWordBookList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wordBookDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userWordBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wordBookDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userWordBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>CY</name><email>lcy960729@gmail.com</email></author><category term="wordbook-project" /><category term="WordBookProject" /><category term="TestCode" /><summary type="html">2021-01-13 :: Mapper Test Code 및 생각 하루 전에 생각했던 Mapper Test code를 작성해보았다. 커스텀한 맵핑 규칙에 대해 테스트를 동작 하였고 전체적인 맵핑 메소드를 테스트 하였다. 아래는 작성해본 코드이다. 테스트 코드 작성하면서 입력이 Null로 들어왔을때에 대한 생각인데 Null일때 에러를 내는것이 좋은지 유연하게 Blank 값을 넣어주는게 좋은지 생각해봐야겠다. 또한 Jpa Entity 내 맵핑하는 변수가 Collection 객체일 경우를 생각해서 모두 final 변수로 두어 null값이 들어가지 않게 초기화하였다. 이 방법이 문제가 될만한 점이 있는지 생각해봐야겠다… @SpringBootTest(classes = {DomainFactory.class, ObjectMapper.class, UserMapperImpl.class}) class UserMapperTest { private static final Logger logger = LoggerFactory.getLogger(UserMapperTest.class); @Autowired private DomainFactory domainFactory; @Autowired private ObjectMapper objectMapper; @Autowired private UserMapper userMapper; @Test @DisplayName(&quot;createUserDTOToEntity 맵핑이 정삭적으로 동작 하는 테스트&quot;) void createUserDTOToEntity() throws JsonProcessingException { //given CreateUserRequestDTO createUserRequestDTO = CreateUserRequestDTO.builder() .name(&quot;testName&quot;) .email(&quot;testEmail&quot;) .pw(&quot;testPw&quot;) .build(); //when User user = userMapper.createUserDTOToEntity(createUserRequestDTO); //then logger.info(objectMapper.writeValueAsString(user)); assertThat(user.getName()).isEqualTo(createUserRequestDTO.getName()); assertThat(user.getEmail()).isEqualTo(createUserRequestDTO.getEmail()); } @Test @DisplayName(&quot;userToUserDetailDTO 맵핑이 정삭적으로 동작 하는 테스트&quot;) void entityToUserDetailDTO() throws JsonProcessingException { //given long userId = 0L; User user = domainFactory.createUser(userId); int length = 3; IntStream.range(0, length).forEach((i) -&amp;gt; { StudyGroup studyGroup = domainFactory.createStudyGroup(i); UserWordBook userWordBook = domainFactory.createUserWordBook(i); Study study = Study.builder() .id((long) i) .studyGroup(studyGroup) .user(user) .build(); user.joinToStudy(study); user.getUserWordBookList().add(userWordBook); }); //when UserDetailResponseDTO userDetailResponseDTO = userMapper.entityToUserDetailDTO(user); //then logger.info(objectMapper.writeValueAsString(userDetailResponseDTO)); assertThat(userDetailResponseDTO.getId()).isEqualTo(user.getId()); assertThat(userDetailResponseDTO.getEmail()).isEqualTo(user.getEmail()); assertThat(userDetailResponseDTO.getName()).isEqualTo(user.getName()); IntStream.range(0, length).forEach((i) -&amp;gt; { UserDetailResponseDTO.StudyGroupDTO studyGroupDTO = userDetailResponseDTO.getStudyGroupList().get(i); StudyGroup studyGroup = user.getStudyList().get(i).getStudyGroup(); assertThat(studyGroupDTO.getId()).isEqualTo(studyGroup.getId()); assertThat(studyGroupDTO.getName()).isEqualTo(studyGroup.getName()); UserDetailResponseDTO.WordBookDTO wordBookDTO = userDetailResponseDTO.getWordBookDTOList().get(i); UserWordBook userWordBook = user.getUserWordBookList().get(i); assertThat(wordBookDTO.getId()).isEqualTo(userWordBook.getId()); assertThat(wordBookDTO.getName()).isEqualTo(userWordBook.getName()); }); } @Test @DisplayName(&quot;User를 StudyGroupDTOList 맵핑이 정삭적으로 동작 하는 테스트&quot;) void mapToStudyGroupDTOList() throws Exception { //given User user = domainFactory.createUser(0L); int length = 5; IntStream.range(0, length).forEach((i) -&amp;gt;{ StudyGroup studyGroup = domainFactory.createStudyGroup(i); Study study = Study.builder() .id((long)i) .user(user) .studyGroup(studyGroup) .build(); user.getStudyList().add(study); }); //when List&amp;lt;UserDetailResponseDTO.StudyGroupDTO&amp;gt; studyGroupDTOList = userMapper.mapToStudyGroupDTOList(user); //then IntStream.range(0, length).forEach((i) -&amp;gt;{ UserDetailResponseDTO.StudyGroupDTO studyGroupDTO = studyGroupDTOList.get(i); StudyGroup studyGroup = user.getStudyList().get(i).getStudyGroup(); assertThat(studyGroupDTO.getId()).isEqualTo(studyGroup.getId()); assertThat(studyGroupDTO.getName()).isEqualTo(studyGroup.getName()); }); } @Test @DisplayName(&quot;userWordBookList를 userWordBookDTOList로 맵핑이 정삭적으로 동작 하는 테스트&quot;) void mapToWordBookDTOList() { //given List&amp;lt;UserWordBook&amp;gt; userWordBookList = new ArrayList&amp;lt;&amp;gt;(); int length = 5; IntStream.range(0, length).forEach((i) -&amp;gt;{ userWordBookList.add(domainFactory.createUserWordBook(i)); }); //when List&amp;lt;UserDetailResponseDTO.WordBookDTO&amp;gt; wordBookDTOList = userMapper.mapToWordBookDTOList(userWordBookList); //then IntStream.range(0, length).forEach((i) -&amp;gt;{ UserDetailResponseDTO.WordBookDTO wordBookDTO = wordBookDTOList.get(i); UserWordBook userWordBook = userWordBookList.get(i); assertThat(wordBookDTO.getId()).isEqualTo(userWordBook.getId()); assertThat(wordBookDTO.getName()).isEqualTo(userWordBook.getName()); }); } }</summary></entry><entry><title type="html">컨트롤러의 메소드 마다 반환값에 대한 생각</title><link href="https://lcy960729.github.io/wordbook-project/2021/01/13/%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC%EC%9D%98-%EB%A9%94%EC%86%8C%EB%93%9C-%EB%A7%88%EB%8B%A4-%EB%B0%98%ED%99%98%EA%B0%92%EC%97%90-%EB%8C%80%ED%95%9C-%EC%83%9D%EA%B0%81.html" rel="alternate" type="text/html" title="컨트롤러의 메소드 마다 반환값에 대한 생각" /><published>2021-01-13T00:00:00+09:00</published><updated>2021-01-13T00:00:00+09:00</updated><id>https://lcy960729.github.io/wordbook-project/2021/01/13/%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC%EC%9D%98-%EB%A9%94%EC%86%8C%EB%93%9C-%EB%A7%88%EB%8B%A4-%EB%B0%98%ED%99%98%EA%B0%92%EC%97%90-%EB%8C%80%ED%95%9C-%EC%83%9D%EA%B0%81</id><content type="html" xml:base="https://lcy960729.github.io/wordbook-project/2021/01/13/%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC%EC%9D%98-%EB%A9%94%EC%86%8C%EB%93%9C-%EB%A7%88%EB%8B%A4-%EB%B0%98%ED%99%98%EA%B0%92%EC%97%90-%EB%8C%80%ED%95%9C-%EC%83%9D%EA%B0%81.html">&lt;h1 id=&quot;2021-01-13--컨트롤러의-메소드-마다-반환값에-대한-생각&quot;&gt;2021-01-13 :: 컨트롤러의 메소드 마다 반환값에 대한 생각&lt;/h1&gt;

&lt;h2 id=&quot;user-도메인-구현을-통해-생각해-본-것들&quot;&gt;User 도메인 구현을 통해 생각해 본 것들&lt;/h2&gt;

&lt;p&gt;컨트롤러는 메소드마다 반환값이 존재할 것이다. RestApi에서는 반환되는 도메인은 현재 상태를 나타내는것이며 다음 상태로의 정보를 가지고 있을 것이다. 이러한 생각을 가지고 기본적인 CRUD에서 반환되는 상태들이 어떤 다음 상태를 가져야하는지 정리해보겠다.&lt;/p&gt;

&lt;p&gt;(다음 상태로 가는 종류는 프로젝트마다 다를것이다. 내가 진행하는 단어장 어플리케이션에서 다음 상태에 대한 생각은 지극히 내가 원하는대로 만든것이다.)&lt;/p&gt;

&lt;h3 id=&quot;create&quot;&gt;Create&lt;/h3&gt;

&lt;p&gt;생성 메소드의 반환 상태는 현재 만든어진 나의 도메인 상태일 것이다. 예를 들어 User를 만든다면 Create의 반환값은 생성된 User일 것이다. 내가 User 라는 정보를 가지고 있는 상태라면 다음 갈수 있는 상태는 User를 Update 하거나 Delete 혹은 내부에 다른 도메인이 있다면 ( User 안에 WordBook이라는 리스트가 있을때) 해당 도메인에 대한 내용을 불러오는 정도가 될 것이다. 이런 기준으로 현재 프로젝트에서 나는 Create 메소드 실행 후 반환되는 상태 값을 아래와 같이 정의하였다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;nd&quot;&gt;@EqualsAndHashCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;callSuper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@NoArgsConstructor&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Data&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserDetailResponseDTO&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RepresentationModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;UserDetailResponseDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;WordBookDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wordBookDTOList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;StudyGroupDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;studyGroupList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;// 중간 생략 ...&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@EqualsAndHashCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;callSuper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@NoArgsConstructor&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Data&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StudyGroupDTO&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RepresentationModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;StudyGroupDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;nd&quot;&gt;@Builder&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;StudyGroupDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linkTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;methodOn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;StudyGroupController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withRel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;get_studyGroup&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Builder&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;UserDetailResponseDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;WordBookDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wordBookDTOList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;StudyGroupDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;studyGroupList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;wordBookDTOList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wordBookDTOList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;studyGroupList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;studyGroupList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;nc&quot;&gt;WebMvcLinkBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selfLinkBuilder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linkTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;UserController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;slash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selfLinkBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withSelfRel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selfLinkBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withRel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;update_user&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selfLinkBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withRel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;delete_user&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;중간 부분은 생략하였다. 서비스에서 로직이 동작후 아래와 같은 DTO로 컨트롤러에게 넘겨준다. 링크를 만드는 주체를 DTO로 넘겼기 때문에 다음 상태를 알려주는 정보는 모두 DTO에서만 관리한다. 간단하게 설명을 하면 self 링크를 통해 현재 내 링크를 알려준다. 그리고 user라는 현재 상태에서는 update, delete 을 수행할 수 있는 링크들을 제공한다. (다음 상태의 링크를 제공. api를 요청하게 되면 요청자는 해당 현재 상태의 도메인을 다음 상태로 이동할 수 있게 된다는 개념)&lt;/p&gt;

&lt;p&gt;그리고 StudyGroupDTO 또한 get_studygroup를 할 수 있는 링크가 존재한다. 이유로는 일단 내 서비스에서 생각하기로 user를 받아올때 wordbook과 studyGroup들은 함께 받아오는 일이 많을 것이다. 때문에 user에서 wordbook과 studygroup를 함께 반환하도록 하였다. (필요하지 않은데 무분별한 데이터를 많이 제공하는것은 성능 측면에서는 좋지 않을것이다.) studygroup으로만 설명하면 따로 studygroupList를 반환하는 api 없이 user에서 studygroupList 정보를 함께 받아오고 필요할때마다 바로 studygroup을 조회할 수 있도록 구현하였다.&lt;/p&gt;

&lt;p&gt;(studygroupList를 따라 조회하고 studygroup를 조회하는 것에 대한 설계는 자신의 프로젝트에 맞게 진행하면 될 것이다.)&lt;/p&gt;

&lt;h3 id=&quot;update&quot;&gt;Update&lt;/h3&gt;

&lt;p&gt;update도 create와 유사하다 생각한다. 어짜피 기존에 도메인 상태값에서 수정된 값으로 상태를 반환 한 것이기때문에 갈 수 있는 상태는 Create와 같다고 설계하였다.&lt;/p&gt;

&lt;h3 id=&quot;delete&quot;&gt;Delete&lt;/h3&gt;

&lt;p&gt;아직은 구현하지 않았지만 User 라는 도메인은 계정을 뜻한다. 계정이 삭제 되었다는건 처음 상태로 돌아가야하므로 로그인 상태로 돌아가는 정보를 제공하거나 로그인 요청 상태를 반환하면 될 것 같다&lt;/p&gt;</content><author><name>CY</name><email>lcy960729@gmail.com</email></author><category term="wordbook-project" /><category term="WordBookProject" /><category term="RestAPI" /><category term="HATEOAS" /><summary type="html">2021-01-13 :: 컨트롤러의 메소드 마다 반환값에 대한 생각 User 도메인 구현을 통해 생각해 본 것들 컨트롤러는 메소드마다 반환값이 존재할 것이다. RestApi에서는 반환되는 도메인은 현재 상태를 나타내는것이며 다음 상태로의 정보를 가지고 있을 것이다. 이러한 생각을 가지고 기본적인 CRUD에서 반환되는 상태들이 어떤 다음 상태를 가져야하는지 정리해보겠다. (다음 상태로 가는 종류는 프로젝트마다 다를것이다. 내가 진행하는 단어장 어플리케이션에서 다음 상태에 대한 생각은 지극히 내가 원하는대로 만든것이다.) Create 생성 메소드의 반환 상태는 현재 만든어진 나의 도메인 상태일 것이다. 예를 들어 User를 만든다면 Create의 반환값은 생성된 User일 것이다. 내가 User 라는 정보를 가지고 있는 상태라면 다음 갈수 있는 상태는 User를 Update 하거나 Delete 혹은 내부에 다른 도메인이 있다면 ( User 안에 WordBook이라는 리스트가 있을때) 해당 도메인에 대한 내용을 불러오는 정도가 될 것이다. 이런 기준으로 현재 프로젝트에서 나는 Create 메소드 실행 후 반환되는 상태 값을 아래와 같이 정의하였다. @EqualsAndHashCode(callSuper = true) @NoArgsConstructor @Data public class UserDetailResponseDTO extends RepresentationModel&amp;lt;UserDetailResponseDTO&amp;gt; { private Long id; private String name; private String email; private List&amp;lt;WordBookDTO&amp;gt; wordBookDTOList; private List&amp;lt;StudyGroupDTO&amp;gt; studyGroupList; // 중간 생략 ... @EqualsAndHashCode(callSuper = true) @NoArgsConstructor @Data public static class StudyGroupDTO extends RepresentationModel&amp;lt;StudyGroupDTO&amp;gt; { private Long id; private String name; @Builder public StudyGroupDTO(Long userId, Long id, String name) throws Exception { this.id = id; this.name = name; add(linkTo(methodOn(StudyGroupController.class).get(userId, this.id)).withRel(&quot;get_studyGroup&quot;)); } } @Builder public UserDetailResponseDTO(Long id, String name, String email, List&amp;lt;WordBookDTO&amp;gt; wordBookDTOList, List&amp;lt;StudyGroupDTO&amp;gt; studyGroupList) { this.id = id; this.name = name; this.email = email; this.wordBookDTOList = wordBookDTOList; this.studyGroupList = studyGroupList; WebMvcLinkBuilder selfLinkBuilder = linkTo(UserController.class).slash(this.id); add(selfLinkBuilder.withSelfRel()); add(selfLinkBuilder.withRel(&quot;update_user&quot;)); add(selfLinkBuilder.withRel(&quot;delete_user&quot;)); } } 중간 부분은 생략하였다. 서비스에서 로직이 동작후 아래와 같은 DTO로 컨트롤러에게 넘겨준다. 링크를 만드는 주체를 DTO로 넘겼기 때문에 다음 상태를 알려주는 정보는 모두 DTO에서만 관리한다. 간단하게 설명을 하면 self 링크를 통해 현재 내 링크를 알려준다. 그리고 user라는 현재 상태에서는 update, delete 을 수행할 수 있는 링크들을 제공한다. (다음 상태의 링크를 제공. api를 요청하게 되면 요청자는 해당 현재 상태의 도메인을 다음 상태로 이동할 수 있게 된다는 개념) 그리고 StudyGroupDTO 또한 get_studygroup를 할 수 있는 링크가 존재한다. 이유로는 일단 내 서비스에서 생각하기로 user를 받아올때 wordbook과 studyGroup들은 함께 받아오는 일이 많을 것이다. 때문에 user에서 wordbook과 studygroup를 함께 반환하도록 하였다. (필요하지 않은데 무분별한 데이터를 많이 제공하는것은 성능 측면에서는 좋지 않을것이다.) studygroup으로만 설명하면 따로 studygroupList를 반환하는 api 없이 user에서 studygroupList 정보를 함께 받아오고 필요할때마다 바로 studygroup을 조회할 수 있도록 구현하였다. (studygroupList를 따라 조회하고 studygroup를 조회하는 것에 대한 설계는 자신의 프로젝트에 맞게 진행하면 될 것이다.) Update update도 create와 유사하다 생각한다. 어짜피 기존에 도메인 상태값에서 수정된 값으로 상태를 반환 한 것이기때문에 갈 수 있는 상태는 Create와 같다고 설계하였다. Delete 아직은 구현하지 않았지만 User 라는 도메인은 계정을 뜻한다. 계정이 삭제 되었다는건 처음 상태로 돌아가야하므로 로그인 상태로 돌아가는 정보를 제공하거나 로그인 요청 상태를 반환하면 될 것 같다</summary></entry><entry><title type="html">설계 및 구현시 각 단계에서 생각해봐야할것들 정리</title><link href="https://lcy960729.github.io/wordbook-project/2021/01/12/%EC%84%A4%EA%B3%84-%EB%B0%8F-%EA%B5%AC%ED%98%84%EC%8B%9C-%EA%B0%81-%EB%8B%A8%EA%B3%84%EC%97%90%EC%84%9C-%EC%83%9D%EA%B0%81%ED%95%B4%EB%B4%90%EC%95%BC%ED%95%A0%EA%B2%83%EB%93%A4-%EC%A0%95%EB%A6%AC.html" rel="alternate" type="text/html" title="설계 및 구현시 각 단계에서 생각해봐야할것들 정리" /><published>2021-01-12T00:00:00+09:00</published><updated>2021-01-12T00:00:00+09:00</updated><id>https://lcy960729.github.io/wordbook-project/2021/01/12/%EC%84%A4%EA%B3%84-%EB%B0%8F-%EA%B5%AC%ED%98%84%EC%8B%9C-%EA%B0%81-%EB%8B%A8%EA%B3%84%EC%97%90%EC%84%9C-%EC%83%9D%EA%B0%81%ED%95%B4%EB%B4%90%EC%95%BC%ED%95%A0%EA%B2%83%EB%93%A4-%EC%A0%95%EB%A6%AC</id><content type="html" xml:base="https://lcy960729.github.io/wordbook-project/2021/01/12/%EC%84%A4%EA%B3%84-%EB%B0%8F-%EA%B5%AC%ED%98%84%EC%8B%9C-%EA%B0%81-%EB%8B%A8%EA%B3%84%EC%97%90%EC%84%9C-%EC%83%9D%EA%B0%81%ED%95%B4%EB%B4%90%EC%95%BC%ED%95%A0%EA%B2%83%EB%93%A4-%EC%A0%95%EB%A6%AC.html">&lt;h1 id=&quot;2021-01-12--설계-및-구현시-각-단계에서-생각해봐야할것들-정리&quot;&gt;2021-01-12 :: 설계 및 구현시 각 단계에서 생각해봐야할것들 정리&lt;/h1&gt;

&lt;h2 id=&quot;레이어및-컴포넌트-설계-구현시-생각해-봐야할-것들&quot;&gt;레이어및 컴포넌트 설계 구현시 생각해 봐야할 것들&lt;/h2&gt;

&lt;h3 id=&quot;컨트롤러-레이어&quot;&gt;컨트롤러 레이어&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;url 패턴 설계&lt;/li&gt;
  &lt;li&gt;현재 상태에서 갈 수 있는 다음 상태 설계&lt;/li&gt;
  &lt;li&gt;반환 DTO 구현 (hateoas 적용)&lt;/li&gt;
  &lt;li&gt;반환 header 구현&lt;/li&gt;
  &lt;li&gt;반환 body 구현&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;서비스-레이어&quot;&gt;서비스 레이어&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Mapper 구현&lt;/li&gt;
  &lt;li&gt;비즈니스 로직 구현&lt;/li&gt;
  &lt;li&gt;최대한 한 서비스는 한 동작만 하도록 구현&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;레퍼지토리&quot;&gt;레퍼지토리&lt;/h3&gt;

&lt;p&gt;&lt;del&gt;아직 직접 작성한 쿼리가 없음&lt;/del&gt;&lt;/p&gt;

&lt;h3 id=&quot;mapper&quot;&gt;Mapper&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;맵핑이 안되는 필드가 없는지 확인&lt;/li&gt;
  &lt;li&gt;맵핑될 필요가 없다면 꼭 무시하는 맵핑 어노테이션을 달아주자&lt;/li&gt;
  &lt;li&gt;Collection에 대한 맵핑은 꼭 직접 확실히 구현.&lt;/li&gt;
  &lt;li&gt;Object to Object는 해당 객체에 필요한것에 맞게 놓치는 필드가 없도록 구현&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;validator&quot;&gt;Validator&lt;/h3&gt;

&lt;p&gt;해당 변수가 서비스했을때 동작 가능할 임계값을 생각하자.&lt;/p&gt;

&lt;p&gt;필요하다면 정규식도 사용해보자.&lt;/p&gt;

&lt;h2 id=&quot;테스트-코드-작성시-생각해봐야할-것들&quot;&gt;테스트 코드 작성시 생각해봐야할 것들&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;위에 내용을 참고하여 설계한 내용을 테스트 코드로 먼저 작성 이후 테스트 코드를 따라가면서 구현&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;**주의**

유닛 테스트는 전체 흐름을 동작한 결과물이 아님.
내가 원하는 입력에 대한 예상 결과값만 나오는걸 유닛 테스트라고 생각.

예를 들어
controller를 테스트 하는데 service 동작이 제대로 수행되는지는 알 필요 없음.
controller를 테스트 하는데 mapper가 제대로 동작하는지 알 필요 없음.
controller를 테스트 하는데 validator가 제대로 동작하는지 알 필요 없음.

우리는 의존있는 객체를 가짜 객체로 만든 후 mock 객체가 올바른 결과를 던져주도록 구현하고
해당 레이어에서 동작하는 코드만 테스트하면 됨.
(처음에는 자꾸 의존된 객체의 동작을 생각하는데 그렇게 생각하지 않으려고 노력해야함)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;현재까지-프로젝트-진행하면서-해야할-유닛-테스트-목록-정리&quot;&gt;현재까지 프로젝트 진행하면서 해야할 유닛 테스트 목록 정리&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;controllerTest&lt;/p&gt;

    &lt;p&gt;컨트롤러에서 테스트 해야할것은 해당 url로 api 요청시 어떤 값을 반환할지만 확인 (서비스, 벨리데이터 등등 어떻게 동작하는지 확인할 필요 x)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;serviceTest&lt;/p&gt;

    &lt;p&gt;입력에 대한 비즈니스 로직이 제대로 동작하는지 확인(db에 잘 저장했는지 확인할 필요 x)&lt;/p&gt;

    &lt;p&gt;비즈니스 로직이 에러를 반환하는 경우도 생각해야함.&lt;/p&gt;

    &lt;p&gt;(예를 들어 만약 객체가 레퍼지토리에서 받아온 값이 없다면 에러처리 같은 경우)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;repositoryTest&lt;/p&gt;

    &lt;p&gt;db에 원하는 요청대로 저장이 되는지 확인&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;exceptionHandlerTest&lt;/p&gt;

    &lt;p&gt;api 요청 후 동작 중 에러가 발생했을때 에러를 처리하고 원하는 결과값을 반환하는지 확인하면 됨&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;mapperTest&lt;/p&gt;

    &lt;p&gt;단순히 mapper가 제대로 맵핑 되는지 확인&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;validatorTest&lt;/p&gt;

    &lt;p&gt;내가 만든 유효성 검증 어노테이션이나 기본적으로 구현된 검증 어노테이션이 제대로 동작하는지 확인&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;단순히 프로젝트를 진행하면서 느낀 내 생각이므로 정답이라고 할순 없음. 테스트를 더 편하게 짜기위해 극단적인 유닛테스트로만 진행하는것이 아닌 통합테스트로도 진행할 수 있음. 사람마다 생각하는 방향이 다르기 때문에 혼자하는 프로젝트가 아니라면 팀원과 생각을 맞춘 후 진행하면 될것같음.&lt;/p&gt;</content><author><name>CY</name><email>lcy960729@gmail.com</email></author><category term="wordbook-project" /><category term="WordBookProject" /><summary type="html">2021-01-12 :: 설계 및 구현시 각 단계에서 생각해봐야할것들 정리 레이어및 컴포넌트 설계 구현시 생각해 봐야할 것들 컨트롤러 레이어 url 패턴 설계 현재 상태에서 갈 수 있는 다음 상태 설계 반환 DTO 구현 (hateoas 적용) 반환 header 구현 반환 body 구현 서비스 레이어 Mapper 구현 비즈니스 로직 구현 최대한 한 서비스는 한 동작만 하도록 구현 레퍼지토리 아직 직접 작성한 쿼리가 없음 Mapper 맵핑이 안되는 필드가 없는지 확인 맵핑될 필요가 없다면 꼭 무시하는 맵핑 어노테이션을 달아주자 Collection에 대한 맵핑은 꼭 직접 확실히 구현. Object to Object는 해당 객체에 필요한것에 맞게 놓치는 필드가 없도록 구현 Validator 해당 변수가 서비스했을때 동작 가능할 임계값을 생각하자. 필요하다면 정규식도 사용해보자. 테스트 코드 작성시 생각해봐야할 것들 위에 내용을 참고하여 설계한 내용을 테스트 코드로 먼저 작성 이후 테스트 코드를 따라가면서 구현 **주의** 유닛 테스트는 전체 흐름을 동작한 결과물이 아님. 내가 원하는 입력에 대한 예상 결과값만 나오는걸 유닛 테스트라고 생각. 예를 들어 controller를 테스트 하는데 service 동작이 제대로 수행되는지는 알 필요 없음. controller를 테스트 하는데 mapper가 제대로 동작하는지 알 필요 없음. controller를 테스트 하는데 validator가 제대로 동작하는지 알 필요 없음. 우리는 의존있는 객체를 가짜 객체로 만든 후 mock 객체가 올바른 결과를 던져주도록 구현하고 해당 레이어에서 동작하는 코드만 테스트하면 됨. (처음에는 자꾸 의존된 객체의 동작을 생각하는데 그렇게 생각하지 않으려고 노력해야함) 현재까지 프로젝트 진행하면서 해야할 유닛 테스트 목록 정리 controllerTest 컨트롤러에서 테스트 해야할것은 해당 url로 api 요청시 어떤 값을 반환할지만 확인 (서비스, 벨리데이터 등등 어떻게 동작하는지 확인할 필요 x) serviceTest 입력에 대한 비즈니스 로직이 제대로 동작하는지 확인(db에 잘 저장했는지 확인할 필요 x) 비즈니스 로직이 에러를 반환하는 경우도 생각해야함. (예를 들어 만약 객체가 레퍼지토리에서 받아온 값이 없다면 에러처리 같은 경우) repositoryTest db에 원하는 요청대로 저장이 되는지 확인 exceptionHandlerTest api 요청 후 동작 중 에러가 발생했을때 에러를 처리하고 원하는 결과값을 반환하는지 확인하면 됨 mapperTest 단순히 mapper가 제대로 맵핑 되는지 확인 validatorTest 내가 만든 유효성 검증 어노테이션이나 기본적으로 구현된 검증 어노테이션이 제대로 동작하는지 확인 단순히 프로젝트를 진행하면서 느낀 내 생각이므로 정답이라고 할순 없음. 테스트를 더 편하게 짜기위해 극단적인 유닛테스트로만 진행하는것이 아닌 통합테스트로도 진행할 수 있음. 사람마다 생각하는 방향이 다르기 때문에 혼자하는 프로젝트가 아니라면 팀원과 생각을 맞춘 후 진행하면 될것같음.</summary></entry><entry><title type="html">단어장 어플리케이션 ERD 정리</title><link href="https://lcy960729.github.io/wordbook-project/2021/01/11/%EB%8B%A8%EC%96%B4%EC%9E%A5-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%9E%AC%EA%B5%AC%EC%84%B1.html" rel="alternate" type="text/html" title="단어장 어플리케이션 ERD 정리" /><published>2021-01-11T00:00:00+09:00</published><updated>2021-01-11T00:00:00+09:00</updated><id>https://lcy960729.github.io/wordbook-project/2021/01/11/%EB%8B%A8%EC%96%B4%EC%9E%A5-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%9E%AC%EA%B5%AC%EC%84%B1</id><content type="html" xml:base="https://lcy960729.github.io/wordbook-project/2021/01/11/%EB%8B%A8%EC%96%B4%EC%9E%A5-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%9E%AC%EA%B5%AC%EC%84%B1.html">&lt;h1 id=&quot;2021-01-11--단어장-도메인-재구성&quot;&gt;2021-01-11 :: 단어장 도메인 재구성&lt;/h1&gt;

&lt;p&gt;기본에 설계된 도메인들의 관계를 머리로만 생각하니 점점 복잡해져서 좀더 명확히 하기 위해 ERD 작성.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2021-01-11-단어장-도메인-재구성/ERD.png&quot; alt=&quot;ERD.png&quot; /&gt;&lt;/p&gt;</content><author><name>CY</name><email>lcy960729@gmail.com</email></author><category term="wordbook-project" /><category term="WordBookProject" /><category term="ERD" /><summary type="html">2021-01-11 :: 단어장 도메인 재구성 기본에 설계된 도메인들의 관계를 머리로만 생각하니 점점 복잡해져서 좀더 명확히 하기 위해 ERD 작성.</summary></entry><entry><title type="html">Service Layer Validator 테스트 문제점</title><link href="https://lcy960729.github.io/wordbook-project/2020/12/29/Service-Layer-Validator-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%AC%B8%EC%A0%9C%EC%A0%90.html" rel="alternate" type="text/html" title="Service Layer Validator 테스트 문제점" /><published>2020-12-29T00:00:00+09:00</published><updated>2020-12-29T00:00:00+09:00</updated><id>https://lcy960729.github.io/wordbook-project/2020/12/29/Service-Layer-Validator-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%AC%B8%EC%A0%9C%EC%A0%90</id><content type="html" xml:base="https://lcy960729.github.io/wordbook-project/2020/12/29/Service-Layer-Validator-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%AC%B8%EC%A0%9C%EC%A0%90.html">&lt;h1 id=&quot;2020-12-29--service-layer-validator-테스트-문제점&quot;&gt;2020-12-29 :: Service Layer Validator 테스트 문제점&lt;/h1&gt;

&lt;p&gt;Spring Boot에서 spring validator는 컨트롤러에서만 동작을 한다. 이유로는 spring mvc에는 서비스 레이어라는것이 존재하지 않는다. 서비스 어노테이션은 그저 단순한 빈의 형태이며 컨트롤러 레이어에서 validator가 동작할 수 있는 이유는 Handler 메소드에서 사용할 인수를 처리하기 전에 유효성 검사를 수행하는 ModelAttributeMethodProcessor가 있기때문이다. 그렇기 때문에  validator가 서비스 레이어에서도 동작을 할수 있도록 하기위해 아래 코드와 같이 서비스 클래스 위에 @Validated라는 어노테이션을 추가해준다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Service&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Validated&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CreateUserWordBookService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserWordBookRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userWordBookRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ModelMapper&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modelMapper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ModelMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CreateUserWordBookService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;UserWordBookRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userWordBookRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;userWordBookRepository&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userWordBookRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@Valid&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserWordBookRequestDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Create&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;createUserWordBookDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;UserWordBook&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userWordBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modelMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;createUserWordBookDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserWordBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;userWordBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userWordBookRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userWordBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userWordBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;문제점은 테스트 코드를 작성할때 발생한다. 서비스 레이어에서 유닛 테스트를 진행하게 되면 @Valid가 트리거 되지않는다. 이유로는 mvc테스트가 아니므로 DispatcherServlet이 없기 때문이다(아래 사진은 유효성 검증이 어떤식으로 이루어지는지 디버깅해본 사진이다). 그렇기 때문에 서비스레이어에서 유효성 검사를 완전히 하기 위해서는 통합 테스트로 진행을 하던가 유효성 검사부분을 직접 작성해야한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2021-12-29-Service-Layer-Validator-테스트-문제점/Validation_동작순서.png&quot; alt=&quot;Validation 실행순서.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 부분에서 많은 시간을 투자했는데 디버깅해보면서 따라가봤으면 금방 해결할 수 있는 문제였다. 안되는걸 하려고하니 시간만 날리는 문제가 발생했는데 다른 방법을 찾아봐야겠다.&lt;/p&gt;</content><author><name>CY</name><email>lcy960729@gmail.com</email></author><category term="wordbook-project" /><category term="WordBookProject" /><category term="SpringBoot" /><category term="TestCode" /><category term="Junit" /><category term="SpringBootDataJPA" /><summary type="html">2020-12-29 :: Service Layer Validator 테스트 문제점 Spring Boot에서 spring validator는 컨트롤러에서만 동작을 한다. 이유로는 spring mvc에는 서비스 레이어라는것이 존재하지 않는다. 서비스 어노테이션은 그저 단순한 빈의 형태이며 컨트롤러 레이어에서 validator가 동작할 수 있는 이유는 Handler 메소드에서 사용할 인수를 처리하기 전에 유효성 검사를 수행하는 ModelAttributeMethodProcessor가 있기때문이다. 그렇기 때문에 validator가 서비스 레이어에서도 동작을 할수 있도록 하기위해 아래 코드와 같이 서비스 클래스 위에 @Validated라는 어노테이션을 추가해준다. @Service @Validated public class CreateUserWordBookService { private final UserWordBookRepository userWordBookRepository; private final ModelMapper modelMapper = new ModelMapper(); public CreateUserWordBookService(UserWordBookRepository userWordBookRepository) { this.userWordBookRepository = userWordBookRepository; } public Long create(@Valid UserWordBookRequestDTO.Create createUserWordBookDTO) { UserWordBook userWordBook = modelMapper.map(createUserWordBookDTO, UserWordBook.class); userWordBook = userWordBookRepository.save(userWordBook); return userWordBook.getId(); } } 문제점은 테스트 코드를 작성할때 발생한다. 서비스 레이어에서 유닛 테스트를 진행하게 되면 @Valid가 트리거 되지않는다. 이유로는 mvc테스트가 아니므로 DispatcherServlet이 없기 때문이다(아래 사진은 유효성 검증이 어떤식으로 이루어지는지 디버깅해본 사진이다). 그렇기 때문에 서비스레이어에서 유효성 검사를 완전히 하기 위해서는 통합 테스트로 진행을 하던가 유효성 검사부분을 직접 작성해야한다. 이 부분에서 많은 시간을 투자했는데 디버깅해보면서 따라가봤으면 금방 해결할 수 있는 문제였다. 안되는걸 하려고하니 시간만 날리는 문제가 발생했는데 다른 방법을 찾아봐야겠다.</summary></entry><entry><title type="html">Spring Boot Controller Layer ErrorHandling And Validation Check</title><link href="https://lcy960729.github.io/wordbook-project/2020/12/16/Spring-Boot-Controller-Layer-ErrorHandling-And-Validation-Check.html" rel="alternate" type="text/html" title="Spring Boot Controller Layer ErrorHandling And Validation Check" /><published>2020-12-16T00:00:00+09:00</published><updated>2020-12-16T00:00:00+09:00</updated><id>https://lcy960729.github.io/wordbook-project/2020/12/16/Spring-Boot-Controller-Layer-ErrorHandling-And-Validation-Check</id><content type="html" xml:base="https://lcy960729.github.io/wordbook-project/2020/12/16/Spring-Boot-Controller-Layer-ErrorHandling-And-Validation-Check.html">&lt;h1 id=&quot;2020-12-16--spring-boot-controller-layer-errorhandling-and-validation-check&quot;&gt;2020-12-16 :: Spring Boot Controller Layer ErrorHandling And Validation Check&lt;/h1&gt;

&lt;p&gt;Spring Boot ErrorHandling에 대해서 알아 보겠다. 컨트롤러 단에서 발생하는 에러들을 처리해야할 일이 많아 진다. 그때 해당 컨트롤러 안에서 발생하는 에러들을 핸들링 하겠다는것이 @ExceptionHandler(‘exception.class’)이다. 해당 어노테이션을 붙인 함수를 컨트롤러 안에 선언하면 어노테이션에 추가한 exception에 대해서 핸들러 함수가 처리를 해준다. 코드를 확인 해 보자&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@RestController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/api/v1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserService&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;UserController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;UserService&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;userService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@PostMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/user&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@Valid&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@RequestBody&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserDTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;createUserDTOJson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;createUserDTOJson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;nc&quot;&gt;HttpHeaders&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpHeaders&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpHeaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;httpHeaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;location&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;httpHeaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@ExceptionHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MethodArgumentNotValidException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ValidationExceptionHandle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MethodArgumentNotValidException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methodArgumentNotValidException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;BindingResult&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bindingResult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methodArgumentNotValidException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBindingResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ObjectError&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;objectError&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bindingResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAllErrors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objectError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDefaultMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;UNPROCESSABLE_ENTITY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같은 코드가 있을때 UserControllerd에서 발생하는 MethodArgumentNotValidException에 대해서 @ExceptionHandler 어노테이션이 붙은 ValidationExceptionHandle 함수가 처리하게 된다.&lt;/p&gt;

&lt;p&gt;더 나아가서 우리는 여러 컨트롤러들이 동일한 예외를 낸다면 위처럼 에러를 처리하기엔 많은 중복 코드가 발생하게 된다. 이런 문제를 해결하기 위해 우리는 전역 컨트롤러에서 발생하는 동일한 에러를 처리하는 클래스를 만들고 이 클래스에서 모든 에러를 처리하도록 구현할 수 있다. 아래의 코드를 보자.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//유저 컨트롤러&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@RestController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/api/v1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserService&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;UserController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;UserService&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;userService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@PostMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/user&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@Valid&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@RequestBody&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserDTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;createUserDTOJson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;createUserDTOJson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;nc&quot;&gt;HttpHeaders&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpHeaders&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpHeaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;httpHeaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;location&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;httpHeaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//RestController에서 발생하는 모든 에러를 담당하는 클래스 -------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@RestControllerAdvice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;annotations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RestController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RestControllerExceptionHandler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 
				&lt;span class=&quot;nc&quot;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;UserExceptionController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@ExceptionHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MethodArgumentNotValidException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ValidationExceptionHandle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MethodArgumentNotValidException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methodArgumentNotValidException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;BindingResult&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bindingResult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methodArgumentNotValidException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBindingResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ObjectError&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;objectError&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bindingResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAllErrors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objectError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDefaultMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;UNPROCESSABLE_ENTITY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위에서 처리한 에러는 VaildException으로 파라메타들의 값이 유효하게 들어왔는지를 확인한다. 이러한 에러는 여러 컨트롤러에서 발생할 수 있으며 각 컨트롤러마다 만들 필요없이 한번에 처리하도록 만드는것이 좋다. 먼저 @ControllerAdvice (annotations = ‘class’) 어노테이션을 이용하여  (annotations = ‘class’)에서 선언한 어노테이션들을 가진 클래스들의 에러를 전역으로 관리한다. 에러를 핸들링 하는 부분은 위와 같다.&lt;/p&gt;

&lt;p&gt;추가 적으로 객체에 대한 유효성 검증에 대해서 알아보자.&lt;/p&gt;

&lt;p&gt;유효성 검증 라이브러리는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;spring-boot-starter-validation&lt;/code&gt;를 사용하였다. 간단하게 유효성을 검증할 Entity나 DTO에 아래와 같이 @Null이나 @NotBlank와 같이 해당하는 어노테이션을 작성해주면 된다. 이후 위에 코드 처럼 유효성 검증할 변수 앞에 @Vaild를 작성해주면 된다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//어떤 변수에 대해서 유효성을 체크할건지 선언하는 부분 @Valid&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(**&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@Valid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@RequestBody&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserDTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;createUserDTOJson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//어떻게 체크할건지 선언하는 부분 @Null, @NotBlank, @Min(value = 2, message = &quot;so young...&quot;) 등...&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserDTO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@Null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@NotBlank&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@NotBlank&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@NotBlank&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Min&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;so young...&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;마지막으로 제대로 동작하는지 확인 하기위해 아래와 같은 테스트 코드를 작성.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createUser_ValidationExceptionTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//given&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;userDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setUserId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;userDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setPw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;userDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;userDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//Min Age 2&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userDTOJson&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;given&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;UserDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;willReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//when&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;ResultActions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultActions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mockMvc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;perform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/user&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;contentType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MediaType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;APPLICATION_JSON&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userDTOJson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//then&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;resultActions&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;andDo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;andExpect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isUnprocessableEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;실행 결과&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;mi&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;59&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;44.935&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ERROR&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12088&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;    &lt;span class=&quot;nc&quot;&gt;Test&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RestControllerExceptionHandler&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;must&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blank&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;59&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;44.936&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ERROR&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12088&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;    &lt;span class=&quot;nc&quot;&gt;Test&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RestControllerExceptionHandler&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;must&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blank&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;59&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;44.936&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ERROR&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12088&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;    &lt;span class=&quot;nc&quot;&gt;Test&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RestControllerExceptionHandler&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;too&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;young&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;59&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;44.936&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ERROR&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12088&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;    &lt;span class=&quot;nc&quot;&gt;Test&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RestControllerExceptionHandler&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;must&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blank&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;BUILD&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SUCCESSFUL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;유효성 검사에서 에러를 발생했기 때문에 controller에서 422(unprocessableEntity)에러를 반환하여 정삭적으로 유효성 검사가 되는지 테스트 하였다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Vaild 체크 어노테이션이나 @RestControllerAdvice의 옵션들은 문서를 참고하자&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.baeldung.com/javax-validation&quot;&gt;Java Bean Validation Basics Baeldung&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://javadoc.io/doc/org.springframework/spring-web/5.1.1.RELEASE/org/springframework/web/bind/annotation/RestControllerAdvice.html#annotations--&quot;&gt;RestControllerAdvice - spring-web 5.1.1.RELEASE javadoc&lt;/a&gt;&lt;/p&gt;</content><author><name>CY</name><email>lcy960729@gmail.com</email></author><category term="wordbook-project" /><category term="WordBookProject" /><category term="SpringBoot" /><category term="Validation" /><category term="ErrorHandling" /><summary type="html">2020-12-16 :: Spring Boot Controller Layer ErrorHandling And Validation Check Spring Boot ErrorHandling에 대해서 알아 보겠다. 컨트롤러 단에서 발생하는 에러들을 처리해야할 일이 많아 진다. 그때 해당 컨트롤러 안에서 발생하는 에러들을 핸들링 하겠다는것이 @ExceptionHandler(‘exception.class’)이다. 해당 어노테이션을 붙인 함수를 컨트롤러 안에 선언하면 어노테이션에 추가한 exception에 대해서 핸들러 함수가 처리를 해준다. 코드를 확인 해 보자 @RestController(&quot;/api/v1&quot;) public class UserController { private final UserService userService; public UserController(UserService userService) { this.userService = userService; } @PostMapping(path = &quot;/user&quot;) public ResponseEntity&amp;lt;Object&amp;gt; createUser(@Valid @RequestBody UserDTO createUserDTOJson) { Long id = userService.createUser(createUserDTOJson); HttpHeaders httpHeaders = new HttpHeaders(); httpHeaders.add(&quot;location&quot;, String.valueOf(id)); return new ResponseEntity&amp;lt;&amp;gt;(httpHeaders, HttpStatus.OK); } @ExceptionHandler(MethodArgumentNotValidException.class) public ResponseEntity&amp;lt;String&amp;gt; ValidationExceptionHandle(MethodArgumentNotValidException methodArgumentNotValidException) { BindingResult bindingResult = methodArgumentNotValidException.getBindingResult(); for (ObjectError objectError : bindingResult.getAllErrors()){ logger.error(objectError.getDefaultMessage()); } return new ResponseEntity&amp;lt;&amp;gt;(HttpStatus.UNPROCESSABLE_ENTITY); } 위와 같은 코드가 있을때 UserControllerd에서 발생하는 MethodArgumentNotValidException에 대해서 @ExceptionHandler 어노테이션이 붙은 ValidationExceptionHandle 함수가 처리하게 된다. 더 나아가서 우리는 여러 컨트롤러들이 동일한 예외를 낸다면 위처럼 에러를 처리하기엔 많은 중복 코드가 발생하게 된다. 이런 문제를 해결하기 위해 우리는 전역 컨트롤러에서 발생하는 동일한 에러를 처리하는 클래스를 만들고 이 클래스에서 모든 에러를 처리하도록 구현할 수 있다. 아래의 코드를 보자. //유저 컨트롤러 @RestController(&quot;/api/v1&quot;) public class UserController { private final UserService userService; public UserController(UserService userService) { this.userService = userService; } @PostMapping(path = &quot;/user&quot;) public ResponseEntity&amp;lt;Object&amp;gt; createUser(@Valid @RequestBody UserDTO createUserDTOJson) { Long id = userService.createUser(createUserDTOJson); HttpHeaders httpHeaders = new HttpHeaders(); httpHeaders.add(&quot;location&quot;, String.valueOf(id)); return new ResponseEntity&amp;lt;&amp;gt;(httpHeaders, HttpStatus.OK); } } //RestController에서 발생하는 모든 에러를 담당하는 클래스 ------------------------------------------------------------------------------- @RestControllerAdvice(annotations = RestController.class) public class RestControllerExceptionHandler { private static final Logger logger = LoggerFactory.getLogger(UserExceptionController.class); @ExceptionHandler(MethodArgumentNotValidException.class) public ResponseEntity&amp;lt;String&amp;gt; ValidationExceptionHandle(MethodArgumentNotValidException methodArgumentNotValidException) { BindingResult bindingResult = methodArgumentNotValidException.getBindingResult(); for (ObjectError objectError : bindingResult.getAllErrors()){ logger.error(objectError.getDefaultMessage()); } return new ResponseEntity&amp;lt;&amp;gt;(HttpStatus.UNPROCESSABLE_ENTITY); } } 위에서 처리한 에러는 VaildException으로 파라메타들의 값이 유효하게 들어왔는지를 확인한다. 이러한 에러는 여러 컨트롤러에서 발생할 수 있으며 각 컨트롤러마다 만들 필요없이 한번에 처리하도록 만드는것이 좋다. 먼저 @ControllerAdvice (annotations = ‘class’) 어노테이션을 이용하여 (annotations = ‘class’)에서 선언한 어노테이션들을 가진 클래스들의 에러를 전역으로 관리한다. 에러를 핸들링 하는 부분은 위와 같다. 추가 적으로 객체에 대한 유효성 검증에 대해서 알아보자. 유효성 검증 라이브러리는 spring-boot-starter-validation를 사용하였다. 간단하게 유효성을 검증할 Entity나 DTO에 아래와 같이 @Null이나 @NotBlank와 같이 해당하는 어노테이션을 작성해주면 된다. 이후 위에 코드 처럼 유효성 검증할 변수 앞에 @Vaild를 작성해주면 된다. //어떤 변수에 대해서 유효성을 체크할건지 선언하는 부분 @Valid public ResponseEntity&amp;lt;Object&amp;gt; createUser(**@Valid** @RequestBody UserDTO createUserDTOJson) //어떻게 체크할건지 선언하는 부분 @Null, @NotBlank, @Min(value = 2, message = &quot;so young...&quot;) 등... public class UserDTO { *@Null* private Long id; @NotBlank private String userId; @NotBlank private String pw; @NotBlank private String name; @Min(value = 2, message = &quot;so young...&quot;) private Integer age; } 마지막으로 제대로 동작하는지 확인 하기위해 아래와 같은 테스트 코드를 작성. @Test public void createUser_ValidationExceptionTest() throws Exception { //given userDTO.setUserId(null); userDTO.setPw(&quot;&quot;); userDTO.setName(null); userDTO.setAge(1); //Min Age 2 String userDTOJson = new ObjectMapper().writeValueAsString(userDTO); given(userService.createUser(any(UserDTO.class))).willReturn(0L); //when ResultActions resultActions = mockMvc.perform( post(&quot;/user&quot;) .contentType(MediaType.APPLICATION_JSON) .content(userDTOJson) ); //then resultActions .andDo(print()) .andExpect(status().isUnprocessableEntity()); } 실행 결과 2020-12-17 02:59:44.935 ERROR 12088 --- [ Test worker] c.e.s.e.RestControllerExceptionHandler : must not be blank 2020-12-17 02:59:44.936 ERROR 12088 --- [ Test worker] c.e.s.e.RestControllerExceptionHandler : must not be blank 2020-12-17 02:59:44.936 ERROR 12088 --- [ Test worker] c.e.s.e.RestControllerExceptionHandler : too young... 2020-12-17 02:59:44.936 ERROR 12088 --- [ Test worker] c.e.s.e.RestControllerExceptionHandler : must not be blank ... BUILD SUCCESSFUL in 6s 유효성 검사에서 에러를 발생했기 때문에 controller에서 422(unprocessableEntity)에러를 반환하여 정삭적으로 유효성 검사가 되는지 테스트 하였다. Vaild 체크 어노테이션이나 @RestControllerAdvice의 옵션들은 문서를 참고하자 Java Bean Validation Basics Baeldung RestControllerAdvice - spring-web 5.1.1.RELEASE javadoc</summary></entry><entry><title type="html">Spring Boot JPA Test</title><link href="https://lcy960729.github.io/wordbook-project/2020/12/14/Spring-Boot-JPA-Test.html" rel="alternate" type="text/html" title="Spring Boot JPA Test" /><published>2020-12-14T00:00:00+09:00</published><updated>2020-12-14T00:00:00+09:00</updated><id>https://lcy960729.github.io/wordbook-project/2020/12/14/Spring-Boot-JPA-Test</id><content type="html" xml:base="https://lcy960729.github.io/wordbook-project/2020/12/14/Spring-Boot-JPA-Test.html">&lt;h1 id=&quot;2020-12-14--spring-boot-jpa-test&quot;&gt;2020-12-14 :: Spring Boot JPA Test&lt;/h1&gt;

&lt;p&gt;JPA를 테스트 하는 방법을 알아보겠다. 우리는 특정한 목적을 위해 쿼리를 작성할 일이 생기고 해당 쿼리가  문제 없이 올바르게 동작하는지 테스트할 필요가 있다. Springboot에서는 @DataJpaTest라는 어노테이션을 이용하여 JPA를 테스트 할수 있게 해준다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//레퍼지토리&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserRepository&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JpaRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SELECT u FROM user u where u.id = :id&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Optional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findById2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@Param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//테스트 클래스&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@RunWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;SpringRunner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@DataJpaTest&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@AutoConfigureTestDatabase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AutoConfigureTestDatabase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Replace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NONE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserRepositoryTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;User_save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//given&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userTemp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;userId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;admin&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;admin&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;lcy&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;userTemp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userTemp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//when&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findById2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userTemp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;orElse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//then&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isNotNull&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;usingRecursiveComparison&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userTemp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;@AutoConfigureTestDatabase 테스트시 데이터베이스와 관련된 설정을 하는 어노테이션이다. 현재처럼 None으로 지정하게되면 application.properties에 설정된 db를 사용한다. 또한 테스트시에는 테스트 디비를 사용하도록 작성할 수도 있다. 자세한 내용은 해당 어노테이션 문서를 찾아보자&lt;/p&gt;

&lt;p&gt;테스트 방식은 앞에서 공부했던 내용과 유사하다. 테스트 내용을 설명하자면 간단하게 findById와 같은 동작을 하는 쿼리를 작성하였다. 이 쿼리가 올바르게 동작하는지 알기 위해 먼저 새로운 유저를 저장한다. 작성한 findById2를 이용하여 저장된 유저의 아이디를 불러온다. 저장한 userTemp와 불러온 user의 모든 속성이 같은지를 확인한다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;DataJpaTest를 실습해보면서 @AutoConfigureTestDatabase(replace = AutoConfigureTestDatabase.Replace.Any)를 사용하여 내장된 DB를 사용할때 문제가 발생하였다.&lt;/p&gt;

&lt;p&gt;기본적으로 위 어노테이션을 사용하거나 아무것도 어노테이션을 사용하지 않는다면 DataJpaTest는 인 메모리 디비를 사용한다. 이때 우리가 application.properties에 db관련된 설정들과 충돌을 일으키면서 DDL이 동작하지 않는 오류가 발생한다.&lt;/p&gt;

&lt;p&gt;해결법으로는 application.properties에 DB 접속과 관련된 부분을 주석을 걸어준다.&lt;/p&gt;

&lt;p&gt;@AutoConfigureTestDatabase(replace = AutoConfigureTestDatabase.Replace.NONE) 를 이용하여 실제 디비 환경에서 테스트를 진행하도록 해야한다.&lt;/p&gt;

&lt;p&gt;테스트 환경에 맞는 application.properties를 구성하는 방법이 있을건데 이건 더 찾아봐야겠다.&lt;/p&gt;</content><author><name>CY</name><email>lcy960729@gmail.com</email></author><category term="wordbook-project" /><category term="WordBookProject" /><category term="SpringBoot" /><category term="TestCode" /><category term="Junit" /><category term="SpringBootDataJPA" /><summary type="html">2020-12-14 :: Spring Boot JPA Test JPA를 테스트 하는 방법을 알아보겠다. 우리는 특정한 목적을 위해 쿼리를 작성할 일이 생기고 해당 쿼리가 문제 없이 올바르게 동작하는지 테스트할 필요가 있다. Springboot에서는 @DataJpaTest라는 어노테이션을 이용하여 JPA를 테스트 할수 있게 해준다. //레퍼지토리 public interface UserRepository extends JpaRepository&amp;lt;User, Long&amp;gt; { @Query(&quot;SELECT u FROM user u where u.id = :id&quot;) Optional&amp;lt;User&amp;gt; findById2(@Param(&quot;id&quot;) Long id); } //테스트 클래스 @RunWith(SpringRunner.class) @DataJpaTest @AutoConfigureTestDatabase(replace = AutoConfigureTestDatabase.Replace.NONE) public class UserRepositoryTest { @Autowired private UserRepository userRepository; @Test public void User_save(){ //given User userTemp = User.builder() .userId(&quot;admin&quot;) .pw(&quot;admin&quot;) .name(&quot;lcy&quot;) .age(25) .build(); userTemp = userRepository.save(userTemp); //when User user = userRepository.findById2(userTemp.getId()).orElse(null); //then assertThat(user) .isNotNull() .usingRecursiveComparison() .isEqualTo(userTemp); } } @AutoConfigureTestDatabase 테스트시 데이터베이스와 관련된 설정을 하는 어노테이션이다. 현재처럼 None으로 지정하게되면 application.properties에 설정된 db를 사용한다. 또한 테스트시에는 테스트 디비를 사용하도록 작성할 수도 있다. 자세한 내용은 해당 어노테이션 문서를 찾아보자 테스트 방식은 앞에서 공부했던 내용과 유사하다. 테스트 내용을 설명하자면 간단하게 findById와 같은 동작을 하는 쿼리를 작성하였다. 이 쿼리가 올바르게 동작하는지 알기 위해 먼저 새로운 유저를 저장한다. 작성한 findById2를 이용하여 저장된 유저의 아이디를 불러온다. 저장한 userTemp와 불러온 user의 모든 속성이 같은지를 확인한다. DataJpaTest를 실습해보면서 @AutoConfigureTestDatabase(replace = AutoConfigureTestDatabase.Replace.Any)를 사용하여 내장된 DB를 사용할때 문제가 발생하였다. 기본적으로 위 어노테이션을 사용하거나 아무것도 어노테이션을 사용하지 않는다면 DataJpaTest는 인 메모리 디비를 사용한다. 이때 우리가 application.properties에 db관련된 설정들과 충돌을 일으키면서 DDL이 동작하지 않는 오류가 발생한다. 해결법으로는 application.properties에 DB 접속과 관련된 부분을 주석을 걸어준다. @AutoConfigureTestDatabase(replace = AutoConfigureTestDatabase.Replace.NONE) 를 이용하여 실제 디비 환경에서 테스트를 진행하도록 해야한다. 테스트 환경에 맞는 application.properties를 구성하는 방법이 있을건데 이건 더 찾아봐야겠다.</summary></entry></feed>